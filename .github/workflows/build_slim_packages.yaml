name: Build slim packages

concurrency:
  group: slim-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true


on:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        erl_otp:
        - 23.3.4.9-3
        - 24.1.5-3
        os:
        - ubuntu20.04
        - el8

    container: ghcr.io/emqx/emqx-builder/4.4-11:${{ matrix.erl_otp }}-${{ matrix.os }}

    steps:
    - uses: actions/checkout@v1
    - name: prepare
      run: |
        git config --global --add safe.directory "$GITHUB_WORKSPACE"
        if make emqx-ee --dry-run > /dev/null 2>&1; then
          echo "https://ci%40emqx.io:${{ secrets.CI_GIT_TOKEN }}@github.com" > $HOME/.git-credentials
          git config --global credential.helper store
          echo "EMQX_NAME=emqx-ee" >> $GITHUB_ENV
        else
          echo "EMQX_NAME=emqx" >> $GITHUB_ENV
        fi
    - name: build zip packages
      run: make ${EMQX_NAME}-zip
    - name: build deb/rpm packages
      run: make ${EMQX_NAME}-pkg
    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: rebar3.crashdump
        path: ./rebar3.crashdump
    - name: packages test
      run: |
        export CODE_PATH="$GITHUB_WORKSPACE"
        .ci/build_packages/tests.sh "${EMQX_NAME}" zip
        .ci/build_packages/tests.sh "${EMQX_NAME}" pkg
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}
        path: _packages/**/*.zip

  windows:
    runs-on: windows-2019
    if: endsWith(github.repository, 'emqx')
    strategy:
      fail-fast: false
      matrix:
        profile:
          - emqx
        otp:
          - 24.2.1
    steps:
    - uses: actions/checkout@v2
    - uses: ilammy/msvc-dev-cmd@v1
    - uses: erlef/setup-beam@v1
      with:
        otp-version: ${{ matrix.otp }}
    - name: build
      env:
        PYTHON: python
        DIAGNOSTIC: 1
      run: |
        erl -eval "erlang:display(crypto:info_lib())" -s init stop
        make ${{ matrix.profile }}-zip
    - name: run emqx
      timeout-minutes: 1
      run: |
        ./_build/${{ matrix.profile }}/rel/emqx/bin/emqx start
        Start-Sleep -s 5
        echo "EMQX started"
        ./_build/${{ matrix.profile }}/rel/emqx/bin/emqx stop
        echo "EMQX stopped"
        ./_build/${{ matrix.profile }}/rel/emqx/bin/emqx install
        echo "EQMX installed"
        ./_build/${{ matrix.profile }}/rel/emqx/bin/emqx uninstall
        echo "EQMX uninstaled"

  mac:
    strategy:
      fail-fast: false
      matrix:
        otp:
        - 24.1.5-3
        macos:
        - macos-11
        - macos-10.15

    runs-on: ${{  matrix.macos }}

    steps:
    - uses: actions/checkout@v1
    - name: prepare
      run: |
        if make emqx-ee --dry-run > /dev/null 2>&1; then
          echo "https://ci%40emqx.io:${{ secrets.CI_GIT_TOKEN }}@github.com" > $HOME/.git-credentials
          git config --global credential.helper store
          echo "EMQX_NAME=emqx-ee" >> $GITHUB_ENV
        else
          echo "EMQX_NAME=emqx" >> $GITHUB_ENV
        fi
    - name: prepare
      run: |
        brew update
        brew install curl zip unzip gnu-sed kerl unixodbc freetds
        echo "/usr/local/bin" >> $GITHUB_PATH
        git config --global credential.helper store
    - uses: actions/cache@v2
      id: cache
      with:
        path: ~/.kerl/${{ matrix.otp }}
        key: otp-install-${{ matrix.otp }}-${{ matrix.macos }}
    - name: build erlang
      if: steps.cache.outputs.cache-hit != 'true'
      timeout-minutes: 60
      env:
        KERL_BUILD_BACKEND: git
        OTP_GITHUB_URL: https://github.com/emqx/otp
      run: |
        kerl update releases
        kerl build ${{ matrix.otp }}
        kerl install ${{ matrix.otp }} $HOME/.kerl/${{ matrix.otp }}
    - name: build
      run: |
        . $HOME/.kerl/${{ matrix.otp }}/activate
        make ensure-rebar3
        sudo cp rebar3 /usr/local/bin/rebar3
        make ${EMQX_NAME}-zip
    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: rebar3.crashdump
        path: ./rebar3.crashdump
    - name: test
      run: |
        pkg_name=$(find _packages/${EMQX_NAME} -mindepth 1 -maxdepth 1 -iname \*.zip)
        unzip -q $pkg_name
        gsed -i '/emqx_telemetry/d' ./emqx/data/loaded_plugins
        ./emqx/bin/emqx start || cat emqx/log/erlang.log.1
        ready='no'
        for i in {1..10}; do
          if curl -fs 127.0.0.1:18083 > /dev/null; then
            ready='yes'
            break
          fi
          sleep 1
        done
        if [ "$ready" != "yes" ]; then
          echo "Timed out waiting for emqx to be ready"
          cat emqx/log/erlang.log.1
          exit 1
        fi
        ./emqx/bin/emqx_ctl status
        ./emqx/bin/emqx stop
        rm -rf emqx
    - uses: actions/upload-artifact@v2
      with:
        name: macos
        path: _packages/**/*.zip
