%%-*- mode: erlang -*-

%% load the helper modules:
CompileOpts = [verbose,report_errors,report_warnings,return_errors,binary],
[case compile:file(ModFile, CompileOpts) of
    {ok, Mod, BinCode} ->
        {module, _} = code:load_binary(Mod, ModFile, BinCode);
    Error ->
        io:format("[error] compile:file(~p) failed: ~p~n", [ModFile, Error])
 end || ModFile <- filelib:wildcard("mods/*.erl")],

%% TODO: load the plugins here:
%% get user plugins from a text file, fetch it and compile

%% render the rebar.config by evaluating the placeholders:
CONFIG_R = mod_config_template:render(CONFIG),
file:write_file("rebar.config.rendered", [io_lib:format("~p.\n", [I]) || I <- CONFIG_R]),
CONFIG_R.
