##--------------------------------------------------------------------
## EMQ X Bridge
##--------------------------------------------------------------------

bridges.mqtt.my_mqtt_bridge_to_aws {
    server = "127.0.0.1:1883"
    proto_ver = "v4"
    username = "username1"
    password = ""
    clean_start = true
    keepalive = 300
    retry_interval = "30s"
    max_inflight = 32
    reconnect_interval = "30s"
    bridge_mode = true
    replayq {
        dir = "{{ platform_data_dir }}/replayq/bridge_mqtt/"
        seg_bytes = "100MB"
        offload = false
        max_total_bytes = "1GB"
    }
    ssl {
        enable = false
        keyfile = "{{ platform_etc_dir }}/certs/client-key.pem"
        certfile = "{{ platform_etc_dir }}/certs/client-cert.pem"
        cacertfile = "{{ platform_etc_dir }}/certs/cacert.pem"
    }
    ## we will create one MQTT connection for each element of the `message_in`
    message_in: [{
        ## the `id` will be used as part of the clientid
        id = "pull_msgs_from_aws"
        subscribe_remote_topic = "aws/#"
        subscribe_qos = 1
        local_topic = "from_aws/${topic}"
        payload = "${payload}"
        qos = "${qos}"
        retain = "${retain}"
    }]
    ## we will create one MQTT connection for each element of the `message_out`
    message_out: [{
        ## the `id` will be used as part of the clientid
        id = "push_msgs_to_aws"
        subscribe_local_topic = "emqx/#"
        remote_topic = "from_emqx/${topic}"
        payload = "${payload}"
        qos = 1
        retain = false
    }]
}
