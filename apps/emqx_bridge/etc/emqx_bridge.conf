##--------------------------------------------------------------------
## EMQ X Bridge
##--------------------------------------------------------------------

## MQTT bridges to/from another MQTT broker
#bridges.mqtt.my_ingress_mqtt_bridge {
#    enable = true
#    connector = "mqtt:my_mqtt_connector"
#    direction = ingress
#    ## topic mappings for this bridge
#    remote_topic = "aws/#"
#    subscribe_qos = 1
#    local_topic = "from_aws/${topic}"
#    payload = "${payload}"
#    qos = "${qos}"
#    retain = "${retain}"
#}
#
#bridges.mqtt.my_egress_mqtt_bridge {
#    enable = true
#    connector = "mqtt:my_mqtt_connector"
#    direction = egress
#    ## topic mappings for this bridge
#    local_topic = "emqx/#"
#    remote_topic = "from_emqx/${topic}"
#    payload = "${payload}"
#    qos = 1
#    retain = false
#}
#
## HTTP bridges to an HTTP server
#bridges.http.my_http_bridge {
#    enable = true
#    ## NOTE: we cannot use placehodler variables in the `scheme://host:port` part of the url
#    url = "http://localhost:9901/messages/${topic}"
#    request_timeout = "30s"
#    connect_timeout = "30s"
#    max_retries = 3
#    retry_interval = "10s"
#    pool_type = "random"
#    pool_size = 4
#    enable_pipelining = true
#    ssl {
#        enable = false
#        keyfile = "{{ platform_etc_dir }}/certs/client-key.pem"
#        certfile = "{{ platform_etc_dir }}/certs/client-cert.pem"
#        cacertfile = "{{ platform_etc_dir }}/certs/cacert.pem"
#    }
#
#    from_local_topic = "emqx_http/#"
#    ## the following config entries can use placehodler variables:
#    ##   url, method, body, headers
#    method = post
#    body = "${payload}"
#    headers {
#        "content-type": "application/json"
#    }
#}
